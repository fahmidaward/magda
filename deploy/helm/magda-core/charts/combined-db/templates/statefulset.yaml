{{- if .Values.global.useCombinedDb }}
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: combined-db
spec:
  serviceName: combined-db
  replicas: 1
  selector:
    matchLabels:
      service: combined-db
  template:
    metadata:
      labels:
        service: combined-db
    spec:
{{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1beta1") .Values.global.enablePriorityClass }}
      priorityClassName: magda-9
{{- end }}
      terminationGracePeriodSeconds: 10
      affinity:
{{- if .Values.affinity }}
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
      tolerations:
      - key: "magda.reservedFor"
        operator: "Equal"
        value: "statefulsets"
        effect: "NoSchedule"
      containers:
      - name: combined-db
        resources:
{{ toYaml .Values.resources | indent 10 }}
        image: {{ template "postgres" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
        ports:
        - containerPort: 5432
        {{- template "magda.postgresLivenessProbe" . }}
        {{- template "magda.postgresLifecycle" . }}
        env:
# whether turn on the debug module for plsql debug through pgAdmin
# After that, you need to run `CREATE EXTENSION pldbgapi;`
# in the database that you want to debug to turn it on database level
{{- if .Values.debug }}
        - name: DEBUG
          value: "1"
{{- end }}
        - name: PGDATA
          value: /var/pv/data
        {{- template "magda.postgres-env" . }}
        volumeMounts:
        - name: combined-db
          mountPath: /var/pv
        {{- template "magda.waleVolumes.volumeMount" . }}
      volumes:
      {{- template "magda.waleVolumes.volume" . }}
  volumeClaimTemplates:
  - metadata:
      name: combined-db
    spec:
      accessModes: [ "ReadWriteOnce" ]
    {{- if .Values.data.storageClass }}
      storageClassName: "{{ .Values.data.storageClass }}"
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.data.storage | quote }}
{{- end }}
